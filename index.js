!function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},n.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);var r,a,o=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e};r=L.map("map",{preferCanvas:!0}).setView([42.69793,23.321628],13),L.tileLayer("https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}",{attribution:'Map data &copy; <createCoordinatesReturn href="http://openstreetmap.org">OpenStreetMap</createCoordinatesReturn> contributors, <createCoordinatesReturn href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</createCoordinatesReturn>, Imagery Â© <createCoordinatesReturn href="http://mapbox.com">Mapbox</createCoordinatesReturn>',maxZoom:18,id:"mapbox.streets-basic",accessToken:"pk.eyJ1IjoiY2hpcHNhbiIsImEiOiJqa0JwV1pnIn0.mvduWzyRdcHxK_QIOpetFg"}).addTo(r);L.control.sidebar("sidebar").addTo(r);a=new L.FeatureGroup,r.addLayer(a);var i=new L.Control.Draw({edit:{featureGroup:a},draw:{circle:!1,circlemarker:!1,marker:!1,polygon:!1,polyline:!1}});r.addControl(i);var c=L.canvas({padding:.5});function s(e,t,n,r){void 0===n&&(n=300),void 0===r&&(r={});o({color:"red"},r);e.forEach(function(e){L.circle(e,{radius:n},o({renderer:c},r)).addTo(t)})}var l=6371e3;function u(e,t,n){void 0===t&&(t=500);var r=Number(t)/l,a=p(Number(n)),o=p(e.lat),i=p(e.lng),c=Math.sin(o),s=Math.cos(o),u=Math.sin(r),d=Math.cos(r),h=Math.sin(a),g=c*d+s*u*Math.cos(a),v=Math.asin(g),m=h*u*s,b=d-c*g,y=i+Math.atan2(m,b);return{point:L.latLng(f(v),(f(y)+540)%360-180)}}function d(e,t){var n=Math.min.apply(Math,e),r=Math.max.apply(Math,e);return n<=t&&t<=r}function p(e){return e*Math.PI/180}function f(e){return 180*e/Math.PI}var h,g,v,m,b;function y(e,t,n){for(var r=e.getEast(),a=[],o=t;a.push(o),d([t.lng,r],o.lng);)o=u(o,n,h.east).point;return a}function w(e,t){return u(u(e,t/2,h.south).point,t/2,h.east).point}!function(e){e[e.east=90]="east",e[e.west=-90]="west",e[e.north=0]="north",e[e.south=180]="south"}(h||(h={})),function(e){e.northWest="NorthWest"}(g||(g={})),b=(new L.FeatureGroup).addTo(r),$("#radius-size").attr("value",150),v=function(e,t){e.clearLayers();var n=document.getElementById("regenerate-btn");n.onclick=function(e,t){t.clearLayers();var n=Number($("#radius-size").val());console.log(n+"m circle radius");var r=function(e){for(var t=[],n=[],r=e.boundingRectangle.getBounds(),a=Object.freeze(r.getNorthWest()),o=a,i=o,c=1;;c++){var s=y(r,i,e.distance);t.push.apply(t,s);var l=w(i,e.distance);if(!d([r.getNorth(),r.getSouth()],o.lat))break;var p=y(r,l,e.distance);p.pop(),n.push.apply(n,p),i=o=u(a,e.distance*c,h.south).point}return{main:t,fillers:n,combined:t.concat(n)}}({boundingRectangle:e,distance:2*n});s(r.main,t,n),s(r.fillers,t,n,{color:"green"});var a=document.getElementById("download-btn");console.log("Generated "+r.combined.length+" circles "),a.onclick=function(){var e={coordinates:r.combined,circleRadius:n};!function(e,t,n){var r=new Blob([e],{type:n});if(window.navigator.msSaveOrOpenBlob)window.navigator.msSaveBlob(r,t);else{var a=window.document.createElement("a");a.href=window.URL.createObjectURL(r),a.download=t,document.body.appendChild(a),a.click(),document.body.removeChild(a)}}(JSON.stringify(e),"coords_"+e.coordinates.length+"_r"+n+".json","application/json")}}.bind(null,t,e),n.click()}.bind(null,b),m=b.clearLayers,r.on("draw:created",function(e){var t=e.layerType,n=e.layer;if("rectangle"!==t)return!0;a.clearLayers(),console.log(t+" drawn");var r=n.getLatLngs()[0];a.addLayer(n),console.log("Boundaries of the area of interest:"),console.log(JSON.stringify(r));var o=L.latLngBounds(r.map(function(e){return[e.lat,e.lng]})),i=L.rectangle(o);v(i)}),r.on("draw:deleted",m)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,